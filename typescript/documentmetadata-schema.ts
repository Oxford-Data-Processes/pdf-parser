/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Id = string;
export type DocumentId = string;
export type DocumentType =
  | "BANK_STATEMENT"
  | "PAYSLIP"
  | "UTILITY_BILL"
  | "COUNCIL_TAX"
  | "MORTGAGE_STATEMENT"
  | "CREDIT_CARD_STATEMENT"
  | "INVESTMENT_STATEMENT"
  | "PENSION_STATEMENT"
  | "TAX_DOCUMENT"
  | "OTHER";
export type DocumentMetadata1 = BankStatementData | PayslipData;
export type DocumentType1 =
  | "BANK_STATEMENT"
  | "PAYSLIP"
  | "UTILITY_BILL"
  | "COUNCIL_TAX"
  | "MORTGAGE_STATEMENT"
  | "CREDIT_CARD_STATEMENT"
  | "INVESTMENT_STATEMENT"
  | "PENSION_STATEMENT"
  | "TAX_DOCUMENT"
  | "OTHER";
export type SwiftBic = string | null;
export type LocalBankCode = string | null;
export type BankCodeType = "SORT_CODE" | "ROUTING_NUMBER" | "BANK_STATE_BRANCH_NUMBER";
export type AccountType = "CURRENT" | "SAVINGS" | "MONEY_MARKET" | "INVESTMENT" | "CREDIT" | "OTHER";
export type StatementPeriodStart = string | null;
export type StatementPeriodEnd = string | null;
export type AccountNumber = string | null;
export type AccountHolder = string | null;
/**
 * Amount in smallest currency unit (e.g., cents)
 */
export type Amount = number;
export type Currency = "USD" | "GBP" | "EUR";
export type Iban = string | null;
export type Date = string;
export type TransactionTypes =
  | "BGC"
  | "BP"
  | "CHG"
  | "CHQ"
  | "COR"
  | "CPT"
  | "DD"
  | "DEB"
  | "DEP"
  | "FEE"
  | "FPI"
  | "FPO"
  | "MPI"
  | "MPO"
  | "PAY"
  | "SO"
  | "TFR";
export type TransactionCategory =
  | "INCOME"
  | "EXPENSE"
  | "TRANSFERS"
  | "HEALTHCARE"
  | "TRANSPORT"
  | "FOOD"
  | "HOUSING"
  | "SHOPPING"
  | "MISCELLANEOUS"
  | "DIGITAL_SERVICES"
  | "ENTERTAINMENT"
  | "UNCATEGORISED";
export type Confidence = number | string;
export type Description = string;
export type TransactionSubcategory =
  | "AUTOMATED_SAVINGS"
  | "BANK_TRANSFER"
  | "SALARY"
  | "REFUND"
  | "PERSONAL_TRANSFER"
  | "FITNESS"
  | "CAR"
  | "PUBLIC"
  | "MICROMOBILITY"
  | "GROCERIES"
  | "TAKEAWAY"
  | "DINING_OUT"
  | "UTILITIES"
  | "RENT"
  | "MORTGAGE"
  | "INSURANCE"
  | "MAINTENANCE"
  | "ONLINE_RETAIL"
  | "IN_STORE_RETAIL"
  | "CLOTHING"
  | "ELECTRONICS"
  | "CASH"
  | "FEES"
  | "SUBSCRIPTIONS"
  | "SOFTWARE"
  | "STREAMING"
  | "ACTIVITIES"
  | "EVENTS"
  | "HOBBIES"
  | "CARE"
  | "EDUCATION"
  | "GIFTS"
  | "OTHER";
export type Income = Transaction[];
export type Savings = Transaction[];
export type Expenses = Transaction[];
export type DocumentType2 =
  | "BANK_STATEMENT"
  | "PAYSLIP"
  | "UTILITY_BILL"
  | "COUNCIL_TAX"
  | "MORTGAGE_STATEMENT"
  | "CREDIT_CARD_STATEMENT"
  | "INVESTMENT_STATEMENT"
  | "PENSION_STATEMENT"
  | "TAX_DOCUMENT"
  | "OTHER";
export type PayPeriodStart = string | null;
export type PayPeriodEnd = string | null;
export type ProcessDate = string | null;
export type EmployerName = string | null;
export type EmployerTaxId = string | null;
export type EmployerRegistration = string | null;
export type EmployeeId = string | null;
export type TaxIdentifier = string | null;
export type LocalTaxCode = string | null;
/**
 * Universal deduction types
 */
export type DeductionType =
  | "FEDERAL_INCOME_TAX"
  | "STATE_INCOME_TAX"
  | "SOCIAL_SECURITY"
  | "PENSION"
  | "HEALTH_INSURANCE"
  | "OTHER";
export type Description1 = string | null;
export type Deductions = PayrollDeduction[];
/**
 * Specific payroll exemption types
 */
export type PayrollExemptionType = "PERSONAL_EXEMPTION";
export type Description2 = string | null;
export type Exemptions = PayrollExemption[];
export type CountryCode =
  | "GB"
  | "US"
  | "DE"
  | "FR"
  | "IT"
  | "ES"
  | "NL"
  | "BE"
  | "IE"
  | "DK"
  | "SE"
  | "NO"
  | "FI"
  | "PT"
  | "AT"
  | "CH";
export type CreatedAt = string;
export type UpdatedAt = string;

export interface DocumentMetadata {
  id: Id;
  document_id: DocumentId;
  document_type: DocumentType;
  document_metadata: DocumentMetadata1;
  created_at: CreatedAt;
  updated_at: UpdatedAt;
  [k: string]: unknown;
}
export interface BankStatementData {
  type?: DocumentType1;
  bank_identifier: BankIdentifier;
  account_type?: AccountType | null;
  statement_period_start?: StatementPeriodStart;
  statement_period_end?: StatementPeriodEnd;
  account_number?: AccountNumber;
  account_holder?: AccountHolder;
  start_balance?: MonetaryAmount | null;
  end_balance?: MonetaryAmount | null;
  total_money_in?: MonetaryAmount | null;
  total_money_out?: MonetaryAmount | null;
  overdraft_limit?: MonetaryAmount | null;
  iban?: Iban;
  currency: Currency;
  analysis_results?: AnalysisResults | null;
  [k: string]: unknown;
}
/**
 * International bank identification
 */
export interface BankIdentifier {
  swift_bic?: SwiftBic;
  local_bank_code?: LocalBankCode;
  local_bank_code_type?: BankCodeType | null;
  [k: string]: unknown;
}
/**
 * Amount with currency
 */
export interface MonetaryAmount {
  amount: Amount;
  currency: Currency;
  [k: string]: unknown;
}
export interface AnalysisResults {
  summary: Summary;
  categorised_transactions: CategorisedTransactions;
  [k: string]: unknown;
}
export interface Summary {
  total_income: MonetaryAmount;
  total_savings: MonetaryAmount;
  total_expenses: MonetaryAmount;
  monthly_averages: MonthlyAverages;
  [k: string]: unknown;
}
export interface MonthlyAverages {
  income: MonetaryAmount;
  savings: MonetaryAmount;
  expenses: MonetaryAmount;
  [k: string]: unknown;
}
export interface CategorisedTransactions {
  income: Income;
  savings: Savings;
  expenses: Expenses;
  [k: string]: unknown;
}
export interface Transaction {
  date: Date;
  type: TransactionTypes;
  amount: MonetaryAmount;
  balance?: MonetaryAmount | null;
  category: TransactionCategory;
  confidence: Confidence;
  description: Description;
  subcategory: TransactionSubcategory;
  [k: string]: unknown;
}
export interface PayslipData {
  type?: DocumentType2;
  pay_period_start?: PayPeriodStart;
  pay_period_end?: PayPeriodEnd;
  process_date?: ProcessDate;
  employer_name?: EmployerName;
  employer_tax_id?: EmployerTaxId;
  employer_registration?: EmployerRegistration;
  employee_id?: EmployeeId;
  tax_identifier?: TaxIdentifier;
  local_tax_code?: LocalTaxCode;
  currency: Currency;
  gross_pay: MonetaryAmount;
  net_pay: MonetaryAmount;
  gross_ytd?: MonetaryAmount | null;
  net_ytd?: MonetaryAmount | null;
  deductions?: Deductions;
  exemptions?: Exemptions;
  country_code: CountryCode;
  [k: string]: unknown;
}
/**
 * Generic deduction structure
 */
export interface PayrollDeduction {
  type: DeductionType;
  amount: MonetaryAmount;
  year_to_date?: MonetaryAmount | null;
  description?: Description1;
  [k: string]: unknown;
}
/**
 * Generic payroll exemption structure
 */
export interface PayrollExemption {
  type: PayrollExemptionType;
  amount: MonetaryAmount;
  year_to_date?: MonetaryAmount | null;
  description?: Description2;
  [k: string]: unknown;
}

/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type Id = string;
export type ClientId = string;
export type AssessmentType = "AFFORDABILITY" | "RISK" | "FULL";
export type IncomeTrend = "INCREASING" | "DECREASING" | "STABLE";
export type IncomeSourceType = "SALARY" | "BUSINESS" | "INVESTMENT" | "OTHER";
export type Frequency = "MONTHLY" | "YEARLY";
export type Amount = number;
export type Currency = "USD" | "GBP" | "EUR";
export type ReliabilityScore = number | string;
export type IncomeSources = IncomeSource[];
export type StabilityScore = number | string;
export type TrendType = "STABLE" | "INCREASING" | "DECREASING";
export type DebtToIncomeRatio = number | string;
export type SavingsRatio = number | string;
export type DisposableIncomeRatio = number | string;
export type PaymentToIncomeRatio = number | string;
export type RiskFactors = string[];
export type RiskFactorTypes =
  | "DEBT_TO_INCOME_RATIO"
  | "SAVINGS_RATIO"
  | "DISPOSABLE_INCOME_RATIO"
  | "PAYMENT_TO_INCOME_RATIO";
export type Message = string;
export type PositiveFactors = PositiveFactor[];
export type RiskLevel = "LOW" | "MEDIUM" | "HIGH";
export type AffordabilityBuffer = number | string;
export type IncomeStabilityScore = number | string;
export type CreatedAt = string;
export type StartDate = string;
export type EndDate = string;

export interface Assessment {
  id: Id;
  client_id: ClientId;
  assessment_type: AssessmentType;
  assessment_data: AssessmentData;
  created_at: CreatedAt;
  analysis_period: AnalysisPeriod;
  [k: string]: unknown;
}
export interface AssessmentData {
  income: Income;
  expenses: Expenses;
  affordability: Affordability;
  risk_assessment: RiskAssessment;
  [k: string]: unknown;
}
export interface Income {
  income_trend: IncomeTrend;
  income_sources: IncomeSources;
  stability_score: StabilityScore;
  monthly_averages: MonthlyAverages;
  annual_projection: MonetaryAmount;
  [k: string]: unknown;
}
export interface IncomeSource {
  name: IncomeSourceType;
  frequency: Frequency;
  monthly_average: MonetaryAmount;
  reliability_score: ReliabilityScore;
  [k: string]: unknown;
}
/**
 * Amount with currency
 */
export interface MonetaryAmount {
  amount: Amount;
  currency: Currency;
  [k: string]: unknown;
}
export interface MonthlyAverages {
  last_3_months: MonetaryAmount;
  last_6_months: MonetaryAmount;
  last_12_months: MonetaryAmount;
  [k: string]: unknown;
}
export interface Expenses {
  fixed_costs: Costs;
  variable_costs: Costs;
  monthly_averages: MonthlyAverages;
  [k: string]: unknown;
}
export interface Costs {
  total: MonetaryAmount;
  categories: Categories;
  [k: string]: unknown;
}
export interface Categories {
  [k: string]: CategoryBreakdown;
}
export interface CategoryBreakdown {
  total: MonetaryAmount;
  subcategories: Subcategories;
  [k: string]: unknown;
}
export interface Subcategories {
  [k: string]: MonetaryAmount;
}
export interface Affordability {
  metrics: AffordabilityMetrics;
  [k: string]: unknown;
}
export interface AffordabilityMetrics {
  disposable_income: DisposableIncome;
  [k: string]: unknown;
}
export interface DisposableIncome {
  current: MonetaryAmount;
  three_month_trend: TrendType;
  six_month_trend: TrendType;
  [k: string]: unknown;
}
export interface RiskAssessment {
  metrics: RiskAssessmentMetrics;
  risk_factors: RiskFactors;
  positive_factors: PositiveFactors;
  overall_risk_level: RiskLevel;
  affordability_buffer: AffordabilityBuffer;
  income_stability_score: IncomeStabilityScore;
  [k: string]: unknown;
}
export interface RiskAssessmentMetrics {
  debt_to_income_ratio: DebtToIncomeRatio;
  savings_ratio: SavingsRatio;
  disposable_income_ratio: DisposableIncomeRatio;
  payment_to_income_ratio: PaymentToIncomeRatio;
  [k: string]: unknown;
}
export interface PositiveFactor {
  type: RiskFactorTypes;
  message: Message;
  [k: string]: unknown;
}
export interface AnalysisPeriod {
  start_date: StartDate;
  end_date: EndDate;
  [k: string]: unknown;
}
